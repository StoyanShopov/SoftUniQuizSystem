@model DetailQuizViewModel

@using QuizSystem.Common
@using QuizSystem.Data.Models
@{
    this.ViewData["Title"] = "Admin Quiz Detail Page";
    var counter = 1;
}
<style>
    #clockdiv {
        font-family: sans-serif;
        color: #fff;
        display: inline-block;
        font-weight: 100;
        text-align: center;
        font-size: 30px;
    }

        #clockdiv > div {
            padding: 10px;
            border-radius: 3px;
            background: #42abf8;
            display: inline-block;
        }

        #clockdiv div > span {
            padding: 15px;
            border-radius: 3px;
            background: #42abf8;
            display: inline-block;
        }

    .smalltext {
        padding-top: 5px;
        font-size: 16px;
    }

    .arrow-right {
        width: 0;
        height: 0;
        border-top: 40px solid transparent;
        border-bottom: 40px solid transparent;
        border-left: 40px solid #42abf8;
    }

    .arrow-left {
        width: 0;
        height: 0;
        border-top: 40px solid transparent;
        border-bottom: 40px solid transparent;
        border-right: 40px solid #42abf8;
    }

    .pagination {
        display: -ms-flexbox;
        flex-wrap: wrap;
        display: flex;
        padding-left: 0;
        list-style: none;
        border-radius: 0.25rem;
    }

</style>

<div class="rounded mt-2 text-white shadow p-3 text-center mb-3">
    <div id="clockdiv">
        <div>
            <span class="minutes"></span>
            <div class="smalltext">Minutes</div>
        </div>
        <div>
            <span class="seconds"></span>
            <div class="smalltext">Seconds</div>
        </div>
    </div>
</div>

<div class="row align-items-center">
    <div class="col-1">
        <div class="arrow-left" onclick="back()">
        </div>
    </div>
    <div class="col-10">
        <form asp-area="" asp-action="Submit" asp-controller="Quizzes" method="post">
            <input hidden asp-for="@Model.Id" />
            <div class="form-group">
                <button type="submit" class="btn btn-primary float-right" onclick="return confirm('Are you sure you want to submit?');">Finish</button>
            </div>
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <input hidden asp-for="@Model.Questions[i].Id" />

                <div style="display: @(counter != 1 ? "none" : "")" id="question-@(counter++)">
                    <div class="container-fluid bg-gray mt-1 rounded shadow">
                        <div class="form-group">
                            <div class="modal-body">
                                <div class="quiz" id="quiz" data-toggle="buttons">
                                    <h1 class="text-center mt-2">Question</h1>
                                    <p class="text-center">
                                        @Model.Questions[i].Text
                                    </p>
                                    @for (int j = 0; j < Model.Questions[i].Answers.Count; j++)
                                    {
                                        <label class="btn btn-lg btn-primary btn-block text-left">
                                            <input asp-for="@Model.Questions[i].Answers[j].IsChecked">@Html.Raw(Model.Questions[i].Answers[j].Text)
                                            <input type="hidden" asp-for="@Model.Questions[i].Answers[j].Id" />
                                        </label>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="container-fluid">
                <ul class="pagination">
                    @for (int i = 1; i <= Model.Questions.Count; i++)
                    {
                        <li class="page-item">
                            <a class="page-link active" onclick="show(@i)" href="javascript:;">@i</a>
                        </li>
                    }
                </ul>
            </div>
        </form>
    </div>
    <div class="col-1">
        <div class="form-group">
            <div class="arrow-right" onclick="next()"></div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var number = Number(1);

        function next() {
            document.getElementById("question-" + number).style.display = "none";
            document.getElementById("question-" + (number + 1)).style.display = "inline";
            number++;
        }

        function back() {
            document.getElementById("question-" + number).style.display = "none";
            document.getElementById("question-" + (number - 1)).style.display = "inline";
            number--;
        }

        function show(id) {
            document.getElementById("question-" + number).style.display = "none";
            document.getElementById("question-" + id).style.display = "inline";
            number = id;
        }

        function getTimeRemaining(endtime) {
            var t = Date.parse(endtime) - Date.parse(new Date());
            var seconds = Math.floor((t / 1000) % 60);
            var minutes = Math.floor((t / 1000 / 60) % 60);
            return {
                'total': t,
                'minutes': minutes,
                'seconds': seconds
            };
        }

        function initializeClock(id, endtime) {
            var clock = document.getElementById(id);
            var minutesSpan = clock.querySelector('.minutes');
            var secondsSpan = clock.querySelector('.seconds');

            function updateClock() {
                var t = getTimeRemaining(endtime);

                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

                if (t.total <= 0) {
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            var timeinterval = setInterval(updateClock, 1000);
        }

        var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);
        initializeClock('clockdiv', deadline);
    </script>
}
